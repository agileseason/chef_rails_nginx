# This file is managed by Chef.
# Do NOT modify this file directly.

<% if @is_cache_enabled %>
proxy_cache_path <%= @app_cache %> levels=1:2 keys_zone=app_cache:50m max_size=1g inactive=720m;
<% end %>

# http://nginx.org/en/docs/http/ngx_http_upstream_module.html#upstream
upstream <%= @upstream_name %> {
  server unix:<%= @app_shared %>/tmp/sockets/unicorn.socket;
}

server {
  <% unless @is_https_only %>
  listen <%= node['nginx']['port'] || 80 %>;
  <% end %>
  <% unless @is_http_only %>
  listen 443 ssl http2;
  <% end %>

  server_name <%= @domains.join ' ' %>;
  root <%= @app_root %>/public;

  server_tokens off;
  client_max_body_size 100M;

  access_log  <%= @app_shared %>/log/nginx_access.log;
  error_log  <%= @app_shared %>/log/nginx_error.log;

  location /nginx_stub_status {
    stub_status on;
  }

  # https://www.linode.com/docs/websites/nginx/how-to-configure-nginx
  location ~* ^.+\.(zip|tgz|gz|rar|bz2|pdf)$ {
    access_log off;
    add_header Cache-Control no-cache;
    expires 0;
  }

  location / {
    # serve static files from defined root folder;
    # @app is a named location for the upstream fallback
    try_files $uri $uri/index.html $uri.html @app;
  }

  location @app {
    <% if @is_cache_enabled %>
    proxy_cache app_cache;
    <% end %>
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_redirect off;

    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;

    proxy_pass http://<%= @upstream_name %>;
  }
  <% unless @is_http_only %>
  <% if @is_ssl_password %>
  ssl_password_file <%= @ssl_files['ssl_password_file'] %>;
  <% end %>
  ssl_certificate <%= @ssl_files['ssl_certificate'] %>;
  ssl_certificate_key <%= @ssl_files['ssl_certificate_key'] %>;

  ssl_dhparam /etc/ssl/<%=@app_name %>.dhparam.pem;

  # enable session resumption to improve https performance
  # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
  ssl_session_cache shared:SSL:100m;
  ssl_session_timeout 1d;

  # https://mozilla.github.io/server-side-tls/ssl-config-generator/
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;

  ssl_stapling on;
  ssl_stapling_verify on;
  <% end %>
}

<% if @is_www_redirect %>
server {
  listen <%= node['nginx']['port'] || 80 %>;
  <% unless @is_http_only %>
  listen 443 ssl http2;
  <% end %>
  server_name <%= @www_redirect_from %>;
  return 301 $scheme://<%=@www_redirect_to%>$request_uri;
}
<% end %>

<% if @is_https_only %>
server {
  listen <%= node['nginx']['port'] || 80 %>;
  server_name <%= @domains.join ' ' %>;

  # Necessary for Let's Encrypt Domain Name ownership validation
  location /.well-known/acme-challenge/ {
    try_files $uri /dev/null =404;
  }

  return 301 https://$host$request_uri;
}
<% end %>
